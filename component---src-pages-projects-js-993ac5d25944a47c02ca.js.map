{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/images/signature.png","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","ProjectsPage","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_data_projects_json__WEBPACK_IMPORTED_MODULE_2__","_ref","location","a","createElement","title","className","style","maxWidth","projects","map","project","key","url","href","target","rel","description","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","p","Header","react_default","gatsby_browser_entry","to","src","sig","width","Layout","children","_ref$lang","lang","_ref$meta","meta","_ref$keywords","keywords","site","_2417117884","data","metaDescription","siteMetadata","Fragment","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join"],"mappings":"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","file":"component---src-pages-projects-js-993ac5d25944a47c02ca.js","sourcesContent":["import React from 'react';\nimport Layout from '../components/Layout';\nimport projects from '../data/projects.json';\n\nexport default function ProjectsPage({ location }) {\n  return (\n    <Layout location={location} title=\"Projects\">\n      <div className=\"container mt-5\">\n        <div style={{ maxWidth: 600 }}>\n          <h1>Projects</h1>\n          <p>Some fulfilled a need, some were to learn, and some were to pass the time.</p>\n        </div>\n\n        <ul className=\"master-list\">\n          {projects.map(project => (\n            <a\n              key={project.url}\n              className=\"master-listitem\"\n              href={project.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              <h3 className=\"master-listitem-title\">{project.title}</h3>\n              <p>{project.description}</p>\n            </a>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  );\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/signature-1c4cccaf13dc17cf7e9c296ab478ac29.png\";","import React from 'react';\nimport { Link } from 'gatsby';\nimport sig from '../assets/images/signature.png';\n\nexport default function Header() {\n  return (\n    <header className=\"container app-header\">\n      <div className=\"d-flex align-items-center\">\n        <Link to=\"/\">\n          <img src={sig} style={{ width: 50 }} />\n        </Link>\n        <div className=\"ml-auto\">\n          <ul className=\"list-unstyled d-flex\">\n            <li>\n              <Link to=\"/blog\">Blog</Link>\n            </li>\n            <li className=\"ml-4\">\n              <Link to=\"/projects\">Projects</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </header>\n  );\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Header from '../components/Header';\n\nexport default function Layout({ children, title, description, lang = 'en', meta = [], keywords = [] }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <>\n      <Helmet\n        htmlAttributes={{\n          lang,\n        }}\n        title={title}\n        titleTemplate={`%s | ${site.siteMetadata.title}`}\n        meta={[\n          {\n            name: `description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:title`,\n            content: title,\n          },\n          {\n            property: `og:description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:type`,\n            content: `website`,\n          },\n          {\n            name: `twitter:card`,\n            content: `summary`,\n          },\n          {\n            name: `twitter:creator`,\n            content: site.siteMetadata.author,\n          },\n          {\n            name: `twitter:title`,\n            content: title,\n          },\n          {\n            name: `twitter:description`,\n            content: metaDescription,\n          },\n        ]\n          .concat(\n            keywords.length > 0\n              ? {\n                  name: `keywords`,\n                  content: keywords.join(`, `),\n                }\n              : []\n          )\n          .concat(meta)}\n      />\n      <div className=\"layout-outer\">\n        <div className=\"layout-inner\">\n          <Header />\n          {children}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}